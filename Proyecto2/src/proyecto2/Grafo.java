/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2;

import java.awt.FileDialog;
import java.io.File;
import java.io.FileWriter;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author luisa
 */
public class Grafo extends javax.swing.JFrame {
    ListaVertice listaVertices;
    public String GraficoGeneral="";
    
    /**
     * Creates new form Grafo
     */
    public Grafo() {
        initComponents();
        this.listaVertices=new ListaVertice();
    }
    
    
    public void GenerarGrafo(){
         try{
              File fold=new File("Grafo.txt");
                fold.delete();
          }catch(Exception e1){
              
          }
        
        try {
            //Crear un objeto File se encarga de crear o abrir acceso a un archivo que se especifica en su constructor
            File archivo = new File("Grafo.txt");

            //Crear objeto FileWriter que sera el que nos ayude a escribir sobre archivo
            FileWriter escribir = new FileWriter(archivo, true);
            //Escribimos en el archivo con el metodo write 
            escribir.write("digraph { \r\n");
            
            escribir.write("rankdir=LR;\r\n");
            GraficoGeneral+="rankdir=LR;  \n";
            String rutatotal="";
            //en este string se guardara todo el archivo de texto
            String registro="";
            //aca te habre un cuadro de dialogo para que busques tu archivo de texto
            FileDialog dialogoArchivo;
            dialogoArchivo = new FileDialog(this, "Carga masiva de rutas",FileDialog.LOAD);
            dialogoArchivo.setVisible(true);
            if(dialogoArchivo.getFile()!=null){ /* Validar que se haya Seleccionado un Archivo*/
               String directorio = dialogoArchivo.getDirectory();
               String nombreArchivo =dialogoArchivo.getFile(); 
                rutatotal= directorio + nombreArchivo;
            }
            //luego que lo seleccionas obtiene la ruta y se la manda 
            //a new file para que lo habra y lo recorra                              a -> z [label="hi", weight=100];
            try {
                Scanner input = new Scanner(new File("/"+rutatotal));
                while (input.hasNextLine()) {
                    String line = input.nextLine();
                    String[] linea=line.split("%");
                    for(int x=0;x<linea.length;x++){
                        String[] Reg=linea[x].split("/");
                        
                        listaVertices.Insertar(Reg[0], Reg[1], Integer.parseInt(Reg[2]));
                        escribir.write(Reg[0]+" -> "+Reg[1]+" [label=\""+Reg[2]+"\", weight=50];\r\n");
                        
                        GraficoGeneral+=Reg[0]+" -> "+Reg[1]+" [label=\""+Reg[2]+"\", weight=50]; \n";
                    }
                }
                input.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            
            escribir.write("\r\n\r\n }");
            escribir.close();
        } //Si existe un problema al escribir cae aqui
        catch (Exception e) {
            System.out.println("Error al escribir");
        }
         
        Runtime cmd=Runtime.getRuntime();
        String comando="dot -Tpng Grafo.txt -o Grafo.png";
        try{
            cmd.exec(comando);
            //cmd.exec("start TablaHash.txt");
        }catch(Exception ex){
            System.out.println("ex: "+ex.getMessage());
        }
        listaVertices.Imprimir();
        try{
        Thread.sleep(2000);
    }catch(InterruptedException e){
        
    }
       
    }// fin de metodo que genera el grafo
    
    public void MostrarGrafo(){
         ReporteHash r=new ReporteHash();
        r.setImagen("Grafo.png");
        r.setVisible(true);
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCargarGrafo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCargarGrafo.setText("Cargar Grafo");
        btnCargarGrafo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarGrafoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnCargarGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnCargarGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargarGrafoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarGrafoActionPerformed
       GenerarGrafo();
    }//GEN-LAST:event_btnCargarGrafoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Grafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Grafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Grafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Grafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Grafo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarGrafo;
    // End of variables declaration//GEN-END:variables
}
